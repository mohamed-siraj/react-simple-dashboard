{"version":3,"file":"static/js/433.bf05c668.chunk.js","mappings":"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","sources":["pages/components/form/Input/Input.form.component.tsx","pages/components/form/label/Label.form.component.tsx","pages/components/loading/loading.component.tsx","pages/login/Login.page.tsx","schema/form/login-page.form-schema.ts","schema/form/register-page.form-schema.ts","services/api/Api.service.ts"],"sourcesContent":["import React from \"react\";\n\nenum ETextType {\n    TEXT = 'text',\n    EMAIL = 'email',\n    PASSWORD = 'password'\n};\n\ntype TTextType = keyof typeof ETextType;\n\ntype TInputFormComponent = {\n    register: any;\n    error: any;\n    name: string;\n    placeholder: string;\n    type: TTextType\n};\n\nconst InputFormComponent: React.FunctionComponent<TInputFormComponent> = ({ error, name, placeholder, type, register }) => {\n\n    return (<>\n        <input data-testid={name} className={`${error ? `border-rose-600` : ''} shadow appearance-none border-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`} type={type} {...register(name, { required: true })} placeholder={placeholder} />\n        {error && <div className=\"text-rose-600 font-bold text-sm mt-[0.1rem]\">{error.message}</div>}\n    </>);\n};\n\nexport default InputFormComponent;","import React from \"react\";\n\ntype TLabelFormComponent = {\n    text: string;\n    error: any\n};\n\nconst LabelFormComponent: React.FunctionComponent<TLabelFormComponent> = ({ text, error }) => {\n\n    return (<>\n        <label className={`block ${error ? 'text-rose-600' : 'text-gray-700'} text-sm font-bold mb-2`}>\n            {text}\n        </label>\n    </>);\n};\n\nexport default LabelFormComponent;","import React from \"react\";\n\n/**\n * @description component type\n */\ntype TLoadingComponent = {\n    color: string;\n    textColor: string;\n};\n\nconst LoadingComponent: React.FunctionComponent<TLoadingComponent> = ({ color, textColor }) => {\n\n    return (<><svg aria-hidden=\"true\" role=\"status\" className={`inline w-4 h-4 me-3 text-${textColor} animate-spin`} viewBox=\"0 0 100 101\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\" fill=\"#E5E7EB\" />\n        <path d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\" fill=\"currentColor\" />\n    </svg>Loading...</>);\n};\n\nexport default LoadingComponent;","import React, { useCallback, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { TLoginForm } from \"../../_types/_forms/login-page.form-type\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { LoginPageFormSchema } from \"../../schema/form\";\nimport { Link } from \"react-router-dom\";\nimport { SirajPng } from \"../../assets\";\nimport LoadingComponent from \"../components/loading/loading.component\";\nimport { toast } from 'react-toastify';\nimport ApiService from \"../../services/api/Api.service\";\nimport { TLoginRequest } from \"../../_types/_request/_request-type\";\nimport StorageService from \"../../services/storage/Storage.service\";\nimport LabelFormComponent from \"../components/form/label/Label.form.component\";\nimport InputFormComponent from \"../components/form/Input/Input.form.component\";\n\ntype TLoginPage = {\n    mockOnSubmit?: () => void\n};\n\nconst LoginPage: React.FunctionComponent<TLoginPage> = ({ mockOnSubmit }) => {\n\n    /**\n     * route manage\n     */\n    const navigate = useNavigate();\n\n    /**\n     * local state management\n     */\n    const [loading, setLoading] = useState<boolean>(false);\n\n    /**\n     * form declaration\n     */\n    const { register, handleSubmit, formState: { errors }, } = useForm<TLoginForm>({\n        resolver: yupResolver(LoginPageFormSchema)\n    });\n\n    const onSubmit: SubmitHandler<TLoginForm> = useCallback(async (values) => {\n\n        /**\n         * test if function is work\n         */\n        if (mockOnSubmit) {\n            mockOnSubmit();\n        }\n\n        /**\n         * check demo credentials\n         */\n        if (values.email !== 'mohamedsiraj@siraj.lk' || values.password !== 'followme') {\n            toast.warning('Please use demo credentials');\n            return;\n        }\n\n        //start loading\n        setLoading(true);\n\n        //payload create\n        const PAYLOAD: TLoginRequest = {\n            email: 'eve.holt@reqres.in',\n            password: 'cityslicka'\n        }\n\n        //api call\n        const API_SERVICE = new ApiService();\n        const result = await API_SERVICE.login(PAYLOAD);\n\n        /**\n         * store token\n         */\n        const STORE = new StorageService();\n        await STORE.setItem('token', result?.data.token);\n\n        setLoading(false);\n\n        toast.success('Welcome to My Dashboard', {\n            position: 'top-center'\n        });\n\n        navigate('/react-simple-dashboard');\n\n    }, [mockOnSubmit, navigate]);\n\n    return (<>\n        <div className=\"flex flex-row justify-center mt-16\">\n            <img src={SirajPng} className=\" rounded-full w-32\" alt=\"Mohamed Siraj\" />\n            <div className=\"flex flex-col ml-5 mt-2\">\n                <div className=\" text-xl font-bold\">Mohamed Siraj</div>\n                <div className=\" text-md font-bold\">Full Stack Software Engineer</div>\n                <Link to={`mailto:amsiraj94@gmail.com`}><div className=\" text-md font-bold\">amsiraj94@gmail.com</div></Link>\n                <Link to={`tel:+94756595269`}><div className=\" text-md font-bold\">+94756595269</div></Link>\n            </div>\n        </div>\n\n        <div className=\"flex flex-row justify-center py-20\">\n            <div className=\"bg-white w-96 h-[34rem] rounded-2xl shadow-2xl\">\n                <div className=\"mt-10 text-center text-2xl font-bold\">\n                    <h1>Login</h1>\n                </div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"flex flex-row justify-center\">\n                        <div className=\"flex flex-col\">\n                            <div className=\"mt-4 mb-3 w-80\">\n                                <LabelFormComponent text={\"Email address\"} error={errors.email} />\n                                <InputFormComponent error={errors.email} name={\"email\"} placeholder={\"Email Address\"} type={\"EMAIL\"} register={register} />\n                            </div>\n                            <div className=\"mt-3 mb-3 w-80\">\n                                <LabelFormComponent text={\"Password\"} error={errors.password} />\n                                <InputFormComponent error={errors.password} name={\"password\"} placeholder={\"Password\"} type={\"PASSWORD\"} register={register} />\n                            </div>\n                            <div className=\"mt-3 mb-3 w-80\">\n                                <button type=\"submit\" className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-full\">\n                                    {!loading ? 'Login' : <LoadingComponent color=\"green\" textColor=\"white\" />}\n                                </button>\n                            </div>\n                            <div className=\"mt-3 mb-3 w-80\">\n                                <Link to=\"/react-simple-dashboard/register\">\n                                    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded w-full\">\n                                        Register\n                                    </button>\n                                </Link>\n                            </div>\n                            <div className=\"mt-3 mb-3 w-80\">\n                                <div className=\"text-left text-xl font-bold\">\n                                    <h1>Demo Credentials</h1>\n                                </div>\n                                <div className=\" text-sm font-bold\">username : mohamedsiraj@siraj.lk</div>\n                                <div className=\" text-sm font-bold\">password : followme</div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n        </div>\n    </>)\n};\n\nexport default LoginPage;","import * as yup from \"yup\";\n\nconst SCHEMA = yup\n  .object({\n    email: yup.string().email().required(),\n    password: yup.string().min(5).required()\n  })\n  .required();\n\nexport default SCHEMA;","import * as yup from \"yup\";\n\nconst SCHEMA = yup\n  .object({\n    email: yup.string().email().required(),\n    password: yup.string().min(5).required(),\n    confirmPassword: yup.string().min(5).required().oneOf([yup.ref('password'), 'Passwords do not match'])\n  })\n  .required();\n\nexport default SCHEMA;","import axios, { AxiosInstance, AxiosError, AxiosResponse } from \"axios\";\nimport { TLoginRequest, TRegisterRequest } from \"../../_types/_request/_request-type\";\nimport { toast } from 'react-toastify';\nimport { TLoginErrorResponse, TLoginSuccessResponse, TRegisterSuccessResponse } from \"../../_types/_response/_response-type\";\nclass ApiService {\n\n    private INSTANCE: AxiosInstance;\n    public BASE_URL = 'https://reqres.in/api';\n\n    constructor() {\n        //create axios instance\n        this.INSTANCE = axios.create({\n            baseURL: this.BASE_URL\n        });\n    }\n\n    /**\n    * @description login request send to API\n    * @param login \n    * @returns {AxiosResponse<TLoginSuccessResponse> }\n    */\n    async login(login: TLoginRequest) {\n\n        try {\n\n            const response: AxiosResponse<TLoginSuccessResponse> = await this.INSTANCE.post(`/login`, login);\n            return response;\n\n        } catch (errors: any) {\n\n            /**\n             * error handling\n             */\n            const ERROR: AxiosError<TLoginErrorResponse> = errors;\n            toast.error(`${ERROR.response?.data.error}`);\n        }\n\n    }\n\n    /**\n     * @description register request \n     * @param register \n     * @returns {AxiosResponse<TRegisterSuccessResponse>}\n     */\n    async register(register: TRegisterRequest) {\n        try {\n\n            const response: AxiosResponse<TRegisterSuccessResponse> = await this.INSTANCE.post(`/register`, register);\n            return response;\n\n        } catch (errors: any) {\n            /**\n             * error handling\n             */\n            const ERROR: AxiosError<TLoginErrorResponse> = errors;\n            toast.error(`${ERROR.response?.data.error}`);\n        }\n    }\n\n};\n\nexport default ApiService;"],"names":["_ref","error","name","placeholder","type","register","_jsxs","_Fragment","children","_jsx","_objectSpread","className","concat","required","message","text","color","textColor","role","viewBox","fill","xmlns","d","mockOnSubmit","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useForm","useForm","resolver","yupResolver","LoginPageFormSchema","handleSubmit","errors","formState","onSubmit","useCallback","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","PAYLOAD","API_SERVICE","result","STORE","wrap","_context","prev","next","email","password","toast","warning","abrupt","ApiService","login","sent","StorageService","setItem","data","token","success","position","stop","_x","apply","arguments","src","SirajPng","alt","Link","to","LabelFormComponent","InputFormComponent","LoadingComponent","yup","min","confirmPassword","oneOf","_classCallCheck","INSTANCE","BASE_URL","this","axios","create","baseURL","_createClass","key","value","_login2","response","_ERROR$response","ERROR","post","t0","_register2","_callee2","_ERROR$response2","_context2","_x2"],"sourceRoot":""}